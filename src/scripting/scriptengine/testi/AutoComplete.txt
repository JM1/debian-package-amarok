Amarok
Amarok.Bookmark
Amarok.Bookmark.args()
Amarok.Bookmark.bookmarkCtorWrapper( QJSValue arg0, QJSValue arg1  = QJSValue(QJSValue::UndefinedValue ) )
Amarok.Bookmark.bookmarkGroupCtorWrapper( QJSValue arg0, QJSValue arg1 = QJSValue(QJSValue::UndefinedValue ) )
Amarok.Bookmark.browserView()
Amarok.Bookmark.childBookmarks()
Amarok.Bookmark.childCount
Amarok.Bookmark.childGroups()
Amarok.Bookmark.clear()
Amarok.Bookmark.command
Amarok.Bookmark.contextView()
Amarok.Bookmark.createCurrentTrackBookmark()
Amarok.Bookmark.currentPlaylistView()
Amarok.Bookmark.customValue
Amarok.Bookmark.deleteChildBookmark( const AmarokUrlPtr &bookmark )
Amarok.Bookmark.deleteChildBookmarkgroup( const BookmarkGroupPtr &bookmarkGroup )
Amarok.Bookmark.description
Amarok.Bookmark.description
Amarok.Bookmark.id
Amarok.Bookmark.id
Amarok.Bookmark.initFromString( const QString & urlString )
Amarok.Bookmark.isNull
Amarok.Bookmark.name
Amarok.Bookmark.name
Amarok.Bookmark.parent
Amarok.Bookmark.parent
Amarok.Bookmark.path
Amarok.Bookmark.prettyCommand()
Amarok.Bookmark.removeFromDb()
Amarok.Bookmark.run()
Amarok.Bookmark.save()
Amarok.Bookmark.save()
Amarok.Bookmark.setArg( const QString &name, const QString &value )
Amarok.Bookmark.url
Amarok.CollectionManager
Amarok.CollectionManager.collectionLocation()
Amarok.CollectionManager.escape( const QString& sql )
Amarok.CollectionManager.query( const QString& sql )
Amarok.CollectionManager.scanCollection()
Amarok.CollectionManager.scanCollectionChanges()
Amarok.CollectionManager.totalAlbums()
Amarok.CollectionManager.totalArtists()
Amarok.CollectionManager.totalComposers()
Amarok.CollectionManager.totalGenres()
Amarok.CollectionManager.totalTracks()
Amarok.Engine
Amarok.Engine.Equalizer
Amarok.Engine.Equalizer.bandFrequencies
Amarok.Engine.Equalizer.defaultPresetList
Amarok.Engine.Equalizer.deletePreset( const QString &presetName )
Amarok.Engine.Equalizer.enabled
Amarok.Engine.Equalizer.gains
Amarok.Engine.Equalizer.globalPresetList
Amarok.Engine.Equalizer.isSupported
Amarok.Engine.Equalizer.maxGain
Amarok.Engine.Equalizer.savePreset( const QString &name, const QList<int> &presetGains )
Amarok.Engine.Equalizer.selectedPreset
Amarok.Engine.Equalizer.translatedDefaultPresetList
Amarok.Engine.Equalizer.translatedGlobalPresetList
Amarok.Engine.Equalizer.userPresets
Amarok.Engine.Mute()
Amarok.Engine.Next()
Amarok.Engine.Pause()
Amarok.Engine.Play()
Amarok.Engine.PlayPause()
Amarok.Engine.Prev()
Amarok.Engine.Seek( int ms )
Amarok.Engine.SeekBackward( int ms = 10000 )
Amarok.Engine.SeekForward( int ms = 10000 )
Amarok.Engine.SeekRelative( int ms )
Amarok.Engine.Stop( bool forceInstant = false )
Amarok.Engine.currentTrack()
Amarok.Engine.dynamicMode
Amarok.Engine.fadeoutLength
Amarok.Engine.randomMode
Amarok.Engine.repeatPlaylist
Amarok.Engine.repeatTrack
Amarok.Engine.volume
Amarok.Info
Amarok.Info.iconPath( const QString& name, int size )
Amarok.Info.scriptConfigPath( const QString& name )
Amarok.Info.scriptPath()
Amarok.Info.version()
Amarok.Lyrics
Amarok.Lyrics.QStringtoUtf8( const QString& lyrics, const QString& encoding = QStringLiteral("UTF-8") )
Amarok.Lyrics.escape( const QString& str )
Amarok.Lyrics.fromUtf8( const QString& str, const QString& encoding )
Amarok.Lyrics.setLyricsForTrack( const QString& trackUrl , const QString& lyrics )
Amarok.Lyrics.showLyrics( const QString& lyrics )
Amarok.Lyrics.showLyricsError( const QString& error )
Amarok.Lyrics.showLyricsHtml( const QString& lyrics )
Amarok.Lyrics.showLyricsNotFound( const QString& msg )
Amarok.Lyrics.toUtf8( const QByteArray& lyrics, const QString& encoding = QStringLiteral("UTF-8") )
Amarok.Playlist
Amarok.Playlist.activeIndex()
Amarok.Playlist.addMedia( const QUrl &url )
Amarok.Playlist.addMediaList( const QList<QUrl> &urls )
Amarok.Playlist.addTrack( const Meta::TrackPtr &track )
Amarok.Playlist.addTrackList( const Meta::TrackList &tracks )
Amarok.Playlist.clearPlaylist()
Amarok.Playlist.filenames()
Amarok.Playlist.playByIndex( int index )
Amarok.Playlist.playMedia( const QUrl &url )
Amarok.Playlist.playMediaList( const QList<QUrl> &urls )
Amarok.Playlist.playTrack( const Meta::TrackPtr &track )
Amarok.Playlist.playTrackList( const Meta::TrackList &trackList )
Amarok.Playlist.removeByIndex( int index )
Amarok.Playlist.removeCurrentTrack()
Amarok.Playlist.saveCurrentPlaylist()
Amarok.Playlist.savePlaylist( const QString& path )
Amarok.Playlist.selectedFilenames()
Amarok.Playlist.setStopAfterCurrent( bool on )
Amarok.Playlist.stopAfterCurrent()
Amarok.Playlist.togglePlaylist()
Amarok.Playlist.totalTrackCount()
Amarok.PlaylistManager
Amarok.PlaylistManager.availableCategories
Amarok.PlaylistManager.deletePlaylists( Playlists::PlaylistList playlistList )
Amarok.PlaylistManager.import( const QUrl &fromLocation )
Amarok.PlaylistManager.isWritable( const Playlists::PlaylistPtr &playlist )
Amarok.PlaylistManager.rename( Playlists::PlaylistPtr playlist, const QString &newName )
Amarok.PlaylistManager.save( Meta::TrackList tracks, const QString &name = QString()
Amarok.Script
Amarok.Script.readConfig( const QString &name, const QVariant &defaultValue )
Amarok.Script.writeConfig( const QString &name, const QVariant &content )
Amarok.ServicePluginManager
Amarok.ServicePluginManager.loadedServiceNames()
Amarok.ServicePluginManager.loadedServices()
Amarok.ServicePluginManager.sendMessage( const QString &service, const QString &message )
Amarok.ServicePluginManager.serviceDescription( const QString &service )
Amarok.ServicePluginManager.serviceMessages( const QString &service )
Amarok.StreamItem
Amarok.StreamItem.album
Amarok.StreamItem.artist
Amarok.StreamItem.callbackData
Amarok.StreamItem.composer
Amarok.StreamItem.coverUrl
Amarok.StreamItem.genre
Amarok.StreamItem.infoHtml
Amarok.StreamItem.itemName
Amarok.StreamItem.level
Amarok.StreamItem.playableUrl
Amarok.StreamItem.year
Amarok.Window
Amarok.Window.*
Amarok.Window.CollectionView
Amarok.Window.CollectionView.*
Amarok.Window.CollectionView.*
Amarok.Window.CollectionView.*>
Amarok.Window.CollectionView.*>
Amarok.Window.CollectionView.addFilter( Collections::QueryMaker *queryMaker )
Amarok.Window.CollectionView.childCount
Amarok.Window.CollectionView.childrenLoaded
Amarok.Window.CollectionView.filter
Amarok.Window.CollectionView.isAlbumItem
Amarok.Window.CollectionView.isCollection
Amarok.Window.CollectionView.isDataItem
Amarok.Window.CollectionView.isNoLabelItem
Amarok.Window.CollectionView.isTrackItem
Amarok.Window.CollectionView.isVariousArtistItem
Amarok.Window.CollectionView.level
Amarok.Window.CollectionView.levels
Amarok.Window.CollectionView.loadChildren()
Amarok.Window.CollectionView.mergedView
Amarok.Window.CollectionView.row
Amarok.Window.CollectionView.selection
Amarok.Window.CollectionView.showCovers
Amarok.Window.CollectionView.showTrackNumbers
Amarok.Window.CollectionView.showYears
Amarok.Window.CollectionView.singleCollection
Amarok.Window.KNotify
Amarok.Window.KNotify.kNotifyEnabled
Amarok.Window.KNotify.show(const QString &title, const QString &body, const QPixmap &pixmap = QPixmap() )
Amarok.Window.KNotify.showCurrentTrack()
Amarok.Window.OSD
Amarok.Window.OSD.setDuration( int ms )
Amarok.Window.OSD.setImage( const QPixmap &image )
Amarok.Window.OSD.setOffset( int y )
Amarok.Window.OSD.setRating( const short rating )
Amarok.Window.OSD.setScreen( int screen )
Amarok.Window.OSD.setText( const QString &text )
Amarok.Window.OSD.setTextColor( const QColor &color )
Amarok.Window.OSD.show()
Amarok.Window.OSD.showCurrentTrack()
Amarok.Window.Statusbar
Amarok.Window.Statusbar.longMessage( const QString &text )
Amarok.Window.Statusbar.shortMessage( const QString &text )
Amarok.Window.activeBrowserName
Amarok.Window.addCustomAction( const QString &menuName, const QString &id, const QString &actionName, const QString &icon = QStringLiteral("amarok") )
Amarok.Window.addSettingsMenu( QMenu *menu )
Amarok.Window.addSettingsMenu( const QString &id, const QString &actionName, const QString &icon = QStringLiteral("amarok") )
Amarok.Window.addSettingsSeparator()
Amarok.Window.addToolsMenu( QMenu *menu )
Amarok.Window.addToolsMenu( const QString &id, const QString &menuTitle, const QString &icon = QStringLiteral("amarok") )
Amarok.Window.addToolsSeparator()
Amarok.Window.font
Amarok.Window.isTrayIconShown
Amarok.Window.palette
Amarok.Window.showToolTip()
Amarok.Window.showTrayIcon( bool show )
Amarok.Window.styleSheet
Amarok.alert( const QString& text, const QString& type = QStringLiteral("information") )
Amarok.debug( const QString& text )
Amarok.end()
Amarok.listRunningScripts()
Amarok.quitAmarok()
Amarok.runScript( const QString& name )
Amarok.stopScript( const QString& name )
BiasFactory
BiasFactory
BiasFactory.album
BiasFactory.artist
BiasFactory.biasCtor()
BiasFactory.bitrate
BiasFactory.bpm
BiasFactory.changeTags( const Meta::FieldHash &changes, bool respectConfig = true )
BiasFactory.comment
BiasFactory.composer
BiasFactory.containsTrack( const Meta::TrackPtr &track )
BiasFactory.containsUid( const QString& uid )
BiasFactory.count
BiasFactory.description
BiasFactory.discNumber
BiasFactory.embeddedCover
BiasFactory.enabled
BiasFactory.fileSize
BiasFactory.fromXml
BiasFactory.genre
BiasFactory.groupBiasCtor()
BiasFactory.identifier
BiasFactory.imagePixmap( int size = 1 )
BiasFactory.imageUrl
BiasFactory.inCollection
BiasFactory.init
BiasFactory.intersectTrackSet( const Dynamic::TrackSet &trackSet )
BiasFactory.intersectUids( const QStringList &uids )
BiasFactory.isEditable
BiasFactory.isEmpty
BiasFactory.isFull
BiasFactory.isLoaded
BiasFactory.isOutstanding
BiasFactory.isValid
BiasFactory.length
BiasFactory.lyrics
BiasFactory.matchingTracks
BiasFactory.name
BiasFactory.path
BiasFactory.playCount
BiasFactory.playable
BiasFactory.rating
BiasFactory.reset( bool value )
BiasFactory.sampleRate
BiasFactory.score
BiasFactory.subtractTrack( const Meta::TrackPtr &track )
BiasFactory.subtractTrackSet( const Dynamic::TrackSet &trackSet )
BiasFactory.subtractUids( const QStringList &uids )
BiasFactory.tags
BiasFactory.title
BiasFactory.toStringFunction
BiasFactory.toXml
BiasFactory.trackCtor( QJSValue arg )
BiasFactory.trackMatches
BiasFactory.trackNumber
BiasFactory.trackSetConstructor( QJSValue arg0, QJSValue arg1 = QJSValue(QJSValue::UndefinedValue) )
BiasFactory.type
BiasFactory.uniteTrack( const Meta::TrackPtr &track )
BiasFactory.uniteTrackSet( const Dynamic::TrackSet &trackSet )
BiasFactory.uniteUids( const QStringList &uids )
BiasFactory.url
BiasFactory.widget
BiasFactory.year
Importer
Importer.availableBindings()
Importer.include( const QString &relativeFile )
Importer.loadAmarokBinding( const QString &name )
Importer.loadExtension( const QString &src )
Importer.loadQtBinding( const QString &binding )
ScriptableServiceScript
ScriptableServiceScript.donePopulating()
ScriptableServiceScript.insertItem( StreamItem* item )
ScriptableServiceScript.setCurrentInfo( const QString &infoHtml )
ScriptableServiceScript.setEmblem( const QPixmap &icon )
ScriptableServiceScript.setIcon( const QPixmap &icon )
ScriptableServiceScript.setScalableEmblem( const QString &emblemPath )